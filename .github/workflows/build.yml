name: Build

# Run this workflow every time a new commit pushed to your repository
on: push

env:
  MSSQL_SA_PASSWORD: "YourStrong!Passw0rd"
  ACCEPT_EULA: "Y"
  MSSQL_PID: "developer"
  
jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  super-lint:
    # Name the Job
    name: Lint code base
    # Set the type of machine to run on
    runs-on: ubuntu-18.04

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
      - name: Add MSFT code signing key
        run: wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
      - name: Add MSFT package repo
        run: sudo add-apt-repository "$(wget -qO- https://packages.microsoft.com/config/ubuntu/18.04/mssql-server-2019.list)"
      - name: Install Sql Server
        run: sudo apt-get install -y --no-install-recommends mssql-tools mssql-server
      - name: Configure Sql Server
        run: sudo -E /opt/mssql/bin/mssql-conf -n setup accept-eula
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Build Rdmp Installer
        run: dotnet publish "./Tools/rdmp" -r linux-x64
      - name: Initialise RDMP
        run: dotnet Tools/rdmp/bin/Debug/netcoreapp2.2/linux-x64/rdmp.dll install localhost TEST_ -D -u sa -p "YourStrong!Passw0rd"
      - name: Test Reusable code
        run: dotnet test "Reusable/Tests/ReusableCodeTests/ReusableCodeTests.csproj" --no-restore --verbosity normal
      - name: Test Core code
        run: dotnet test "./Rdmp.Core.Tests/Rdmp.Core.Tests.csproj" --no-restore --verbosity normal
      - name: Package
        run: |
          dotnet publish -r win-x64 -c Release -o PublishWindows
          dotnet publish -r linux-x64 -c Release -o PublishLinux --self-contained false
          
      - name: Sign
        shell: cmd
        run: |
            powershell.exe -nologo -noprofile -command "& { [IO.File]::WriteAllBytes("GitHubActionsWorkflow.pfx", [System.Convert]::FromBase64String("${{ secrets.DIGICERT_PFX }}")); }"
            "C:\Program Files (x86)\Windows Kits\10\bin\x86\signtool.exe" Sign /f GitHubActionsWorkflow.pfx /p ${{ secrets.DIGICERT_PASSWORD }} /fd sha256 /tr http://timestamp.digicert.com /td sha256 PublishWindows/*.dll PublishWindows/*.exe  PublishLinux/*.dll
            mkdir dist
            powershell.exe -nologo -noprofile -command "& { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::CreateFromDirectory('Tools/rdmp/PublishWindows', 'dist/rdmp-cli-win-x64.zip'); [IO.Compression.ZipFile]::CreateFromDirectory('Tools/rdmp/PublishLinux', 'dist/rdmp-cli-linux-x64.zip'); }"
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist
